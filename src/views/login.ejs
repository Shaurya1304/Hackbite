<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Login - Node App</title>
  <style>
    body {
      font-family: 'Arial', sans-serif;
      background-color: #f5f5f5;
      margin: 0;
      padding: 0;
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100vh;
    }
    .login-container {
      background-color: white;
      border-radius: 8px;
      box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
      padding: 40px;
      width: 100%;
      max-width: 400px;
      text-align: center;
    }
    h1 {
      color: #333;
      margin-bottom: 30px;
    }
    .github-button {
      background-color: #24292e;
      color: white;
      border: none;
      padding: 12px 20px;
      border-radius: 4px;
      font-size: 16px;
      cursor: pointer;
      display: flex;
      align-items: center;
      justify-content: center;
      width: 100%;
      margin-top: 20px;
    }
    .github-button:hover {
      background-color: #0f1114;
    }
    .github-icon {
      margin-right: 10px;
      width: 24px;
      height: 24px;
    }
  </style>
</head>
<body>
  <div class="login-container">
    <h1>Welcome to Node App</h1>
    <p>Please sign in to continue</p>
    
    <button id="githubLogin" class="github-button">
      <svg class="github-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="white">
        <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
      </svg>
      Sign in with GitHub
    </button>
  </div>

  <!-- Firebase SDK -->
  <script src="https://www.gstatic.com/firebasejs/9.23.0/firebase-app-compat.js"></script>
  <script src="https://www.gstatic.com/firebasejs/9.23.0/firebase-auth-compat.js"></script>

  <script type="module">
    // Import Firebase modules
    import { initializeApp } from "https://www.gstatic.com/firebasejs/9.23.0/firebase-app.js";
    import { getAuth, signInWithPopup, GithubAuthProvider } from "https://www.gstatic.com/firebasejs/9.23.0/firebase-auth.js";

    // Your Firebase configuration
    const firebaseConfig = {

            apiKey: "AIzaSyA1EiL5ia9y-ipHXrvtuidO5k73jl-fIgM",
            authDomain: "byte-38c3d.firebaseapp.com",
            projectId: "byte-38c3d",
            storageBucket: "byte-38c3d.firebasestorage.app",
            messagingSenderId: "436753254839",
            appId: "1:436753254839:web:b641d87132a1f82f9a0032",
            measurementId: "G-B9XFGGZ3XQ"
};

    // Initialize Firebase
    const app = initializeApp(firebaseConfig);
    const auth = getAuth(app);
    const provider = new GithubAuthProvider();

    document.getElementById('githubLogin').addEventListener('click', async () => {
      try {
        signInWithPopup(auth, provider)
          .then((result) => {
            // This gives you a GitHub Access Token
            const credential = GithubAuthProvider.credentialFromResult(result);
            const token = credential.accessToken;
            
            // The signed-in user info
            const user = result.user;
            
            // Send the user data to the server to establish a session
            return fetch('/auth/github/callback', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json'
              },
              body: JSON.stringify({ 
                user,
                accessToken: token // Include the GitHub access token
              })
            });
          })
          .then(response => response.json())
          .then(data => {
            if (data.success) {
              window.location.href = data.redirectUrl;
            } else {
              console.error('Login failed:', data.error);
              alert('Login failed: ' + data.error);
            }
          })
          .catch((error) => {
            // Handle Errors here
            const errorCode = error.code;
            const errorMessage = error.message;
            // The email of the user's account used
            const email = error.customData?.email;
            // The AuthCredential type that was used
            const credential = GithubAuthProvider.credentialFromError(error);
            
            console.error('Error during authentication:', error);
            alert('Authentication failed: ' + errorMessage);
          });
      } catch (error) {
        console.error('Error during authentication:', error);
        alert('Authentication failed: ' + error.message);
      }
    });
  </script>
</body>
</html> 